<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.book.dao.BookDao">

    <resultMap type="com.book.entity.Book" id="BookMap">
        <result property="bookid" column="bookId" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="score" column="score" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="VARCHAR"/>
        <result property="publish" column="publish" jdbcType="VARCHAR"/>
        <result property="url" column="url" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BookMap">
        select bookId,
               name,
               score,
               price,
               publish,
               url
        from book.book
        where bookId = #{bookid}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from book.book
        <where>
            <if test="bookid != null">
                and bookId = #{bookid}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
            <if test="score != null and score != ''">
                and score = #{score}
            </if>
            <if test="price != null and price != ''">
                and price = #{price}
            </if>
            <if test="publish != null and publish != ''">
                and publish = #{publish}
            </if>
            <if test="url != null and url != ''">
                and url = #{url}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="bookid" useGeneratedKeys="true">
        insert into book.book(name, score, price, publish, url)
        values (#{name}, #{score}, #{price}, #{publish}, #{url})
    </insert>

    <insert id="insertBatch" keyProperty="bookid" useGeneratedKeys="true">
        insert into book.book(name, score, price, publish, url)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.score}, #{entity.price}, #{entity.publish}, #{entity.url})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="bookid" useGeneratedKeys="true">
        insert into book.book(name, score, price, publish, url)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.name}, #{entity.score}, #{entity.price}, #{entity.publish}, #{entity.url})
        </foreach>
        on duplicate key update
        name = values(name),
        score = values(score),
        price = values(price),
        publish = values(publish),
        url = values(url)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update book.book
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="score != null and score != ''">
                score = #{score},
            </if>
            <if test="price != null and price != ''">
                price = #{price},
            </if>
            <if test="publish != null and publish != ''">
                publish = #{publish},
            </if>
            <if test="url != null and url != ''">
                url = #{url},
            </if>
        </set>
        where bookId = #{bookid}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from book.book
        where bookId = #{bookid}
    </delete>

    <select id="queryPageList" resultType="com.book.entity.Book">
        select bookId, name, score, price, publish, url
        from book.book ${ew.customSqlSegment}
    </select>
    <select id="queryRecommendBookByBookId" resultType="com.book.entity.Book">
        select *
        from book.book
        where bookId = #{bookId}
        union
        select *
        from book.book_test
        where bookId = #{bookId};
    </select>

    <select id="queryRecommendBookList" resultType="com.book.entity.Book">
        select *
        from book.book
        where bookId = #{bookId}
    </select>

    <delete id="deleteBookTable">
        drop table book.book;
    </delete>

    <delete id="deleteBookTestTable">
        drop table book.book_test;
    </delete>

    <update id="createBookTable">
        create table book
        (
            bookId  integer primary key auto_increment,
            name    varchar(200),
            score   varchar(200),
            price   varchar(200),
            publish varchar(200),
            url     varchar(200)
        );
    </update>

    <update id="createBookTestTable">
        create table book_test
        (
            bookId  integer primary key auto_increment,
            name    varchar(200),
            score   varchar(200),
            price   varchar(200),
            publish varchar(200),
            url     varchar(200)
        );
    </update>

</mapper>

